server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILE:dev}
  main:
    allow-bean-definition-overriding: true
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:templatedb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 1000
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  
  # Redis 설정 (선택적)
  # data:
  #   redis:
  #     host: ${REDIS_HOST:localhost}
  #     port: ${REDIS_PORT:6379}
  #     timeout: 6000ms
  
  flyway:
    enabled: false

# JWT 설정
jwt:
  secret: ${JWT_SECRET:base64encodedSecretKeyForDevelopmentOnlyPleaseChangeInProduction}
  expiration: 3600000 # 1시간

# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.security: INFO
    com.template.base: INFO
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Swagger/OpenAPI 설정
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC

# 액추에이터 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized

---
# 개발 환경 설정 (H2 데이터베이스 사용)
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  
  flyway:
    enabled: false

logging:
  level:
    com.template.base: DEBUG
    org.springframework.security: DEBUG

---
# PostgreSQL 환경 설정
spring:
  config:
    activate:
      on-profile: postgres
  
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true

logging:
  level:
    com.template.base: DEBUG
    org.springframework.security: DEBUG

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: false

logging:
  level:
    root: WARN
    com.template.base: INFO